{"version":3,"file":"static/js/341.3ccb8bcd.chunk.js","mappings":"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","sources":["js/movieApi.js","webpack://react-homework-template/./src/page/Movies/Movies.module.css?e724","page/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst KEY = '0c6aaf0b7647b8904eb56d7029fc3369';\n\n\nexport const fetchTranding = async () => {\n    const queryString = `trending/movie/day?api_key=${KEY}`;\n    const { data: movies } = await axios.get(queryString);\n    return movies;\n}\n\nexport const searchMovie = async query => {\n    const queryString = `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`;\n    const { data: movies } = await axios.get(queryString);\n    return movies;\n}\n\nexport const getMovieDetails = async movieId => {\n    const queryString = `movie/${movieId}?api_key=${KEY}&language=en-US`;\n    const { data: movies } = await axios.get(queryString);\n    return movies;\n}\n\nexport const getMovieCast = async movieId => {\n    const queryString = `movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n    const { data } = await axios.get(queryString);\n    return data;\n}\n\nexport const getMovieReviews = async movieId => {\n    const queryString = `movie/${movieId}/reviews?api_key=${KEY}&language=en-US`;\n    const { data } = await axios.get(queryString);\n    return data;\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Movies_box__P3b3q\",\"list\":\"Movies_list__oktUD\",\"list_item\":\"Movies_list_item__O9qKv\",\"link\":\"Movies_link__vBXNp\",\"title\":\"Movies_title__twVOZ\"};","import { useState, useEffect } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport Notiflix from 'notiflix';\nimport { searchMovie } from \"js/movieApi\";\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [searchQuery, setSearchQuery] = useState(''); //setSearchQuery\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const query = searchParams.get('query') ?? '';\n    const location = useLocation();\n    console.log(query);\n\n    useEffect(() => {\n        if (query === '') {\n            return;\n        }\n\n        const getMovies = async () => {\n            try {\n                setError(null);\n\n                const result = await searchMovie(query);\n                setMovies(result.results);\n            } catch (e) {\n                setError(e.toJSON());\n            }\n        };\n        getMovies();\n    }, [query]);\n\n    const updateQuery = query => {\n        // const nextParams = query !== '' ? { query } : {};\n        console.log(query);\n        setSearchParams({ query });\n        console.log({ query });\n    }\n\n    const handleInputChange = e => {\n        setSearchQuery(e.target.value.toLowerCase());\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        // setSearchParams(e);\n        reset();\n        updateQuery(searchQuery);\n    }\n\n    const reset = () => {\n        setSearchParams('');\n        setError(null);\n    }\n\n    return (\n        <div className={css.box}>\n            {error && Notiflix.Notify.warning('Sorry, there are no movies matching your search query. Please try again.')}\n            <header className=\"Searchbar\">\n                <form className=\"SearchForm\" onSubmit={handleSubmit}>\n                    <input\n                        onChange={handleInputChange}\n                        value={searchQuery}\n                        className=\"SearchForm-input\"\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movies\"\n                    />\n\n                    <button type=\"submit\" className=\"SearchForm-button\">\n                        <span>Search</span>\n                    </button>\n                </form>\n            </header>\n\n            <ul className={css.list}>\n                {movies.length > 0 && movies.map(({ id, title, poster_path }) => (\n\n                    <li key={id} className={css.list_item}>\n                        <Link className={css.link}\n                            to={`/movies/${id}`} state={{ from: location }}\n                        >\n                            <img\n                                src={\n                                    poster_path\n                                        ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                                        : 'https://bitsofco.de/content/images/2018/12/broken-1.png'\n                                }\n                                width=\"200\" height=\"150\"\n                                alt={title} />\n                            <p className={css.title}>{title}</p>\n                        </Link>\n                    </li>\n                ))}\n\n            </ul>\n        </div>\n    );\n}\n\nexport default Movies;"],"names":["axios","IMAGE_URL","KEY","fetchTranding","queryString","movies","data","searchMovie","query","getMovieDetails","movieId","getMovieCast","getMovieReviews","useState","setMovies","error","setError","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","get","location","useLocation","console","log","useEffect","getMovies","result","results","toJSON","reset","className","css","Notiflix","onSubmit","e","preventDefault","updateQuery","onChange","target","value","toLowerCase","type","autoComplete","autoFocus","placeholder","length","map","id","title","poster_path","to","state","from","src","width","height","alt"],"sourceRoot":""}